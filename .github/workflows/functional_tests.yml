name: functional-tests

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 1 * * *'

jobs:
  functional-tests:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      -
        name: Build
        run: go build 
      -
        name: Create account
        run: ./apppack create account --dockerhub-username $DOCKERHUB_USERNAME --dockerhub-access-token $DOCKERHUB_ACCESS_TOKEN | tee account_create_output.txt
        timeout-minutes: 3
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_ACCESS_TOKEN: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
      -
        name: Approve account
        run: |
          export ROLE_ARN=$(grep AppPackRoleArn account_create_output.txt | awk '{print $2}')
          export ACCOUNT_ID=$(echo $ROLE_ARN | cut -d: -f5)
          export EXTERNAL_ID=$(grep ExternalId account_create_output.txt | awk '{print $2}')
          python -c "import json; print(json.dumps({\"primary_id\": {\"S\": \"ACCT#$ACCOUNT_ID\"}, \"secondary_id\": {\"S\": \"-\"}, \"external_id\": {\"S\": \"$EXTERNAL_ID\"}, \"region\": {\"S\": \"us-east-1\"}, \"role_arn\": {\"S\": \"$ROLE_ARN\"}}))" > item.json
          aws dynamodb put-item --table-name apppack --item file://item.json
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.APPPACK_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.APPPACK_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
      -
        name: Create cluster
        run: ./apppack create cluster --domain testclusters.apppack.io --hosted-zone-id Z05906472T84V7X7Q6UDY
        timeout-minutes: 8
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
      -
        name: Create app
        run:  |
            ./apppack create app --non-interactive \
                                 --cluster apppack \
                                 --repository https://github.com/apppackio/apppack-demo-python.git \
                                 --branch main \
                                 --users user@apppack.io \
                                 app-test
        timeout-minutes: 5
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
      # TODO: authorize CLI
      # -
      #   name: Deploy app
      #   run:  |
      #       ./apppack build start -a app-test --wait
      #   timeout-minutes: 5
      # -
      #   name: Check app
      #   run: curl --fail https://app-test.testclusters.apppack.io
      -
        name: Destroy app
        run: yes yes | ./apppack destroy app app-test
        if: always()
        timeout-minutes: 5
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
      -
        name: Destroy cluster
        run: yes yes | ./apppack destroy cluster apppack
        if: always()
        timeout-minutes: 8
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
      -
        name: Destroy account
        run: yes yes | ./apppack destroy account
        if: always()
        timeout-minutes: 3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
      -
        name: Disable account
        if: always()
        run: |
          cat item.json
          aws dynamodb delete-item --table-name apppack --key '{
            "primary_id": {"S": "ACCT#'$(grep AppPackRoleArn account_create_output.txt | awk '{print $2}' | cut -d: -f5)'"},
            "secondary_id": {"S": "-"}
          }'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.APPPACK_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.APPPACK_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
